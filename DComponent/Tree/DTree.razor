@namespace DComponent
@using System.Linq.Expressions
@typeparam TItem
@if (_dTree.TreeNodeData.Count == 0)
{
    <div>加载中...</div>
}
else
{
    <ul class="Dtree list-group">
        @foreach (var node in _dTree.TreeNodeData.Where(p => p.IsVisible).ToList())
        {
            <li @key="node" class="list-group-item @(node.Selected?"selected":"")">
                @for (int i = 0; i < node.Level; i++)
                {
                    <span class="indent"></span>
                }
                @{ var parentNode = _dTree.TreeNodeData.FirstOrDefault(p => p.Id == node.ParentId);}
                @if (parentNode != null)//展开位置
                {
                    @for (int i = 0; i < node.Level; i++)
                    {
                        <span class="indent"></span>
                    }
                }
                @*@if (parentNode != null && SelectMode == SelectMode.M)//checkbox位置
                    {
                        <span class="indent"></span>
                    }*@

                @if (node.ChirdenNodes != null)
                {
                    <a @onclick="@(e=>_dTree.UpdateNodeExpand(node.Id,!node.Expanded))"><i class="@(node.Expanded?"fa fa-arrow-down":"fa fa-arrow-right")"></i></a>
                }
                @if (SelectMode == SelectMode.M)
                {
                    if (node.Selected) SelectedData.Add((TItem)node.Tag);
                    <input style="width:13px;" type="checkbox" checked="@node.Selected" @onchange="@(e => {
                                                                                                     var checkValue = (bool)e.Value;
                                                                                                     _dTree.UpdateNodeCheck(node.Id, checkValue);
                                                                                                     if (!checkValue)
                                                                                                         SelectedData.Remove((TItem)node.Tag);
                                                                                                     if (SelectedDataChanged.HasDelegate)
                                                                                                         SelectedDataChanged.InvokeAsync(SelectedData);
                                                                                                 })" />
                }
                <a  @onclick="@(e=> { if (SelectMode == SelectMode.S)
                                                                                                      {
                                                                                                          _dTree.UpdateNodeSelect(node.Id, !node.Selected);
                                                                                                          SingleSelectedData = (TItem)node.Tag;
                                                                                                          if (SingleSelectedDataChanged.HasDelegate)
                                                                                                              SingleSelectedDataChanged.InvokeAsync((TItem)node.Tag);
                                                                                                      }
                                                                                                  })">
                    @if (NodeContext != null)
                    {
                        @NodeContext(node.Tag)
                    }
                    else
                    {
                        @node.Text
                    }
                </a>

            </li>
        }

    </ul>
}